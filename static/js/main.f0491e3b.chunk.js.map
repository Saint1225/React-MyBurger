{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","auxi","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","click","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","type","BreadTop","Seeds1","Seeds2","BreadBottom","Meat","Cheese","Salad","Bacon","withRouter","console","log","transformedIngredients","Object","keys","ingredients","map","igkey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchaseable","ordered","Modal","nextProps","nextState","style","transform","opacity","modalbtn","Button","btnstyle","OrderSummary","textTransform","continue","cancel","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptors","interceptors","request","use","req","resInterceptors","response","eject","message","BurgerBuilder","purchasing","updatePurchaseState","sum","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","disabledInfo","ings","order","burger","Spinner","onIngredientAdded","onIngredientRemoved","connect","burgerBuilder","totalprice","dispatch","ingName","ingredientName","get","then","data","catch","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","mail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","orderDate","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidility","formValid","validOrNot","rules","isValid","trim","formElementsArray","id","config","checkout","onSubmit","formElement","loading","orderData","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchaseRedirect","purchased","path","match","component","Order","item","display","border","padding","Number","parseFloat","Orders","onFetchOrders","orders","res","fetchedOrders","err","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","updatedProperities","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","newOrder","purchaseBurgerStart","fetchOrdersSuccess","fetchOrdersFail","fetchOrdersStart","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f0491e3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2nolY\",\"BreadTop\":\"BurgerIngredient_BreadTop__29TN8\",\"Seeds1\":\"BurgerIngredient_Seeds1__1U4kz\",\"Seeds2\":\"BurgerIngredient_Seeds2__2yCUr\",\"Meat\":\"BurgerIngredient_Meat__1xSaG\",\"Cheese\":\"BurgerIngredient_Cheese__30cAz\",\"Salad\":\"BurgerIngredient_Salad__1-7_f\",\"Bacon\":\"BurgerIngredient_Bacon__nIiVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__H40K7\",\"Open\":\"SideDrawer_Open__2uB7r\",\"Close\":\"SideDrawer_Close__2dy6s\",\"Logo\":\"SideDrawer_Logo__22304\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1hyaw\",\"Label\":\"BuildControl_Label__2RrgS\",\"Less\":\"BuildControl_Less__1_XGr\",\"More\":\"BuildControl_More__J_xF2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1_6cb\",\"Label\":\"Input_Label__3hFJS\",\"InputElement\":\"Input_InputElement__1OX6o\",\"Invalid\":\"Input_Invalid__2U3Rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1NZak\",\"Logo\":\"Toolbar_Logo__Dj5sc\",\"DesktopOnly\":\"Toolbar_DesktopOnly__YQHiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__98RWX\",\"active\":\"NavigationItem_active__343GC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1CZ1z\",\"OrderButton\":\"BuildControls_OrderButton__1CTNR\",\"enable\":\"BuildControls_enable__1Tgzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3a9QL\",\"Success\":\"Button_Success__2tpQV\",\"Danger\":\"Button_Danger__1umUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__9jlyX\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__29fxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__HyE63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3Zpg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3GGP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1iQvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__-gmSD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__-BtSJ\",\"load3\":\"Spinner_load3__3EVe_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__jCDrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1NBSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__VKIz0\"};","const auxi = (props) => props.children;\r\n\r\nexport default auxi;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = () => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt='MyBurger'></img>\r\n    </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <div className={classes.NavigationItem}>\r\n        <NavLink \r\n        to={props.link}\r\n        exact={props.exact}\r\n        // exact\r\n        activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </div>\r\n)\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) =>(\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link='/orders'>Orders</NavigationItem>\r\n    </ul>\r\n)\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}></DrawerToggle>\r\n        <div className={classes.Logo}>\r\n            <Logo></Logo>\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems></NavigationItems>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.click}></div> : null\r\n    )\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxi from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) =>{\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return(\r\n        <Auxi>\r\n            <Backdrop\r\n            show={props.open}\r\n            click={props.closed}\r\n            ></Backdrop>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo></Logo>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems></NavigationItems>\r\n                </nav>\r\n            </div>\r\n        </Auxi>\r\n    )\r\n}\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Auxi from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Auxi>\r\n            <SideDrawer \r\n            closed={this.sideDrawerClosedHandler}\r\n            open={this.state.showSideDrawer}\r\n            // clicked={this.menuCloseHandler}\r\n            ></SideDrawer>\r\n            <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}></Toolbar>\r\n            <main className={classes.Content}>\r\n                {this.props.children}\r\n            </main>\r\n        </Auxi>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-my-burger-73703.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\n\r\nclass BurgerIngredient extends Component{\r\n    render() {\r\n    let ingredient = null;\r\n    switch (this.props.type){\r\n        case ('bread-top'):\r\n            ingredient = (\r\n            <div className={classes.BreadTop}>\r\n                <div className={classes.Seeds1}></div>\r\n                <div className={classes.Seeds2}></div>\r\n            </div>\r\n            );\r\n            break;\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) =>{\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igkey => {\r\n            return [...Array(props.ingredients[igkey])].map((_,i) => {\r\n                return <BurgerIngredient key={igkey + i} type={igkey}></BurgerIngredient>;\r\n            });\r\n        })\r\n        .reduce((arr,el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n    console.log(transformedIngredients);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!!</p>\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top'></BurgerIngredient>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom'></BurgerIngredient>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(burger);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n        className={classes.Less} \r\n        onClick={props.removed}\r\n        disabled={props.disabled}\r\n        >Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Meat', type: 'meat'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        { controls.map(ctrl => \r\n            <BuildControl \r\n            added={() => props.ingredientAdded(ctrl.type)}\r\n            removed={() => props.ingredientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}\r\n            key={ctrl.label} \r\n            label={ctrl.label}></BuildControl>\r\n            )}\r\n        <button \r\n        className={classes.OrderButton}\r\n        disabled={props.purchaseable}\r\n        onClick={props.ordered}\r\n        >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Bcakdrop from '../Backdrop/Backdrop';\r\nimport Auxi from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        console.log('[Modal] will update');\r\n    }\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <Auxi>\r\n                <Bcakdrop\r\n                show={this.props.show}\r\n                click={this.props.clicked}\r\n                ></Bcakdrop>\r\n                <div \r\n                className={classes.Modal}\r\n                style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1':'0'\r\n                }}\r\n                >\r\n                        {this.props.children}\r\n                </div>\r\n            </Auxi>   \r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst modalbtn = (props) => {\r\n    return (\r\n    <button \r\n    className={[classes.Button, classes[props.btnstyle]].join(' ')}\r\n    onClick={props.clicked}\r\n    disabled={props.disabled}\r\n    >\r\n        {props.children}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default modalbtn;","import React, { Component } from 'react';\r\nimport Auxi from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class\r\n    componentWillUpdate(){\r\n        console.log('[OrderSummary] will update');\r\n    }\r\n\r\n    render(){\r\n        const ingredients = Object.keys(this.props.ingredient).map((igkey) => {\r\n            return(\r\n                <li key={igkey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igkey}</span>: {this.props.ingredient[igkey]}\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <Auxi>\r\n            <p>Your Order</p>\r\n            <p>Here's your burger's ingredients:</p>\r\n            <ul>{ingredients}</ul>\r\n            <p><strong>Total price: {this.props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to checkout?</p>\r\n            <Button btnstyle=\"Success\" clicked={this.props.continue}>Continue</Button>\r\n            <Button btnstyle=\"Danger\" clicked={this.props.cancel}>Cancel</Button>\r\n        </Auxi>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () =>(\r\n    <div className={classes.Loader}>Loading...</div>\r\n)\r\n\r\nexport default spinner;","import React, {Component} from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Auxi from '../Auxiliary/Auxiliary';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\nreturn ( class extends Component {\r\n    state = {\r\n        error: null\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.reqInterceptors = axios.interceptors.request.use(req => {\r\n            this.setState({\r\n                error: null\r\n            });\r\n            return req;\r\n        })\r\n\r\n        this.resInterceptors = axios.interceptors.response.use(null, error => {\r\n            this.setState({\r\n                error: error\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // console.log('Will Unmount', this.reqInterceptors, this.resInterceptors);\r\n        axios.interceptors.request.eject(this.reqInterceptors);\r\n        axios.interceptors.response.eject(this.resInterceptors);\r\n    }\r\n\r\n    errorConfirmedHandler = () =>{\r\n        this.setState({ error: null })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxi>\r\n                <Modal \r\n                show={this.state.error}\r\n                clicked={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...this.props}></WrappedComponent>\r\n            </Auxi>\r\n            )\r\n        }\r\n    })\r\n}\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport Auxi from '../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../axios-orders';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        purchasing: false\r\n        }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        // const ingredients = {\r\n        //     ...this.state.ingredient\r\n        // };\r\n        const sum = Object.keys(ingredients)\r\n        .map(igkey => {\r\n            return ingredients[igkey];\r\n        })\r\n        .reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0)\r\n        return  sum === 0;\r\n    };\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing: true\r\n        })\r\n    }\r\n\r\n    purchaseCancelHandler = () =>{\r\n        this.setState({\r\n            purchasing: false\r\n        })\r\n    }\r\n\r\n    purchaseContinueHandler = () =>{\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let order = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!!</p> : <Spinner>Loading...</Spinner>;\r\n\r\n        if (this.props.ings){\r\n            burger = (\r\n            <Auxi>\r\n                <Burger ingredients={this.props.ings}></Burger>;\r\n                <BurgerControls \r\n                ingredientAdded={this.props.onIngredientAdded}\r\n                ingredientRemoved={this.props.onIngredientRemoved}\r\n                disabled={disabledInfo}\r\n                price={this.props.price}\r\n                purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                ordered={this.purchaseHandler}\r\n                ></BurgerControls>\r\n            </Auxi>);\r\n            order = <OrderSummary \r\n                ingredient={this.props.ings}\r\n                price={this.props.price}\r\n                continue={this.purchaseContinueHandler}\r\n                cancel={this.purchaseCancelHandler}\r\n                ></OrderSummary>;\r\n        }\r\n\r\n        // console.log(disabledInfo);\r\n        return (\r\n            <Auxi>\r\n                <div>\r\n                    {burger}\r\n                </div>\r\n                <Modal show={this.state.purchasing} clicked={this.purchaseCancelHandler}>\r\n                    {order}\r\n                </Modal>\r\n            </Auxi>\r\n        );\r\n    }\r\n}\r\n\r\n const mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalprice,\r\n        error: state.burgerBuilder.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-73703.firebaseio.com/Ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed());\r\n        })\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER = 'PURCHASE_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error));\r\n        })\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }    \r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n        .then(res =>{\r\n            const fetchedOrders = [];\r\n            for (let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key})\r\n            }\r\n            // console.log(fetchedOrders);\r\n            dispatch(fetchOrdersSuccess(fetchedOrders))\r\n        })\r\n        .catch(err =>{\r\n            dispatch(fetchOrdersFail(err))\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}></Burger>\r\n            </div>\r\n            <Button \r\n            btnstyle=\"Danger\"\r\n            clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n            btnstyle=\"Success\"\r\n            clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default CheckoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) =>{\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'): \r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}></input>;\r\n            break;\r\n\r\n        case ('textarea') : \r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}></textarea>;\r\n            break;\r\n\r\n        case ('select') : \r\n            inputElement = <select \r\n                className={inputClasses.join(' ')} \r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map((option) => (\r\n                <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n                </select>;\r\n            break;\r\n\r\n        default: \r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}></input>\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            mail: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                // value: 'fastest',\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        // console.log(this.props.ingredients);\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderDate: formData\r\n        };\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) =>{\r\n        const updatedOrderForm = {...this.state.orderForm};\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n        updatedFormElement.valid = this.checkValidility(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formValid = true;\r\n        for (let validOrNot in updatedOrderForm){\r\n            formValid = updatedOrderForm[validOrNot].valid && formValid;\r\n        }        \r\n        \r\n        this.setState({\r\n            orderForm: updatedOrderForm,\r\n            formIsValid: formValid\r\n        })\r\n    }\r\n\r\n    checkValidility (value, rules) {\r\n        let isValid = false;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        if (rules.required){\r\n            isValid = value.trim() !== '';\r\n        }\r\n        if (rules.minLength){\r\n            isValid = value.trim().length >= rules.minLength && value.trim().length <= rules.maxLength;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let checkout = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map((formElement) => (\r\n                    <Input \r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}></Input>\r\n                    ))}\r\n                <Button \r\n                btnstyle='Success' \r\n                disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            checkout = <Spinner></Spinner>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter Your Contact Data</h4>\r\n                {checkout}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalprice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n// export default withRouter(ContactData);","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = null;\r\n        if (this.props.ings) {\r\n            const purchaseRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchaseRedirect}\r\n                    <CheckoutSummary\r\n                    ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler}\r\n                    ></CheckoutSummary>\r\n                    <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    component={ContactData}></Route>\r\n                </div>\r\n            )\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) =>{\r\n    const ingredients = [];\r\n    console.log(props.ingredients);\r\n    for (let item in props.ingredients) {\r\n        ingredients.push(<span \r\n            style={{\r\n                textTransform: 'capitalize', \r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={item}>{item} ({props.ingredients[item]}) </span>)\r\n    }\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredients}</p>\r\n            <p>Price: <strong>USD: {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'; \r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onFetchOrders();\r\n    }\r\n    render () {\r\n        let orders = <Spinner></Spinner>;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => {\r\n                    return (\r\n                        <Order \r\n                        ingredients={order.ingredients} \r\n                        price={order.price} \r\n                        key={order.id}></Order>\r\n                    )\r\n                })\r\n            }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n\n  //For Removing old interceptors, 10-185\n  // state = {\n  //   show: true\n  // };\n\n  // componentDidMount () {\n  //   setTimeout(() => {\n  //     this.setState({ show: false });      \n  //   }, 5000);\n  // }\n  //For Removing old interceptors, 10-185\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          {/* {this.state.show ? <BurgerBuilder />: null} */}\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout}></Route>\n            <Route path='/orders' component={Orders}></Route>\n            <Route path=\"/\" exact component={BurgerBuilder}></Route>\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (state, updatedProperities) => {\r\n    return {\r\n        ...state,\r\n        ...updatedProperities\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalprice: 4,\r\n    error: false\r\n}\r\n\r\nconst INGREDIENT_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalprice: state.totalprice + INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalprice: state.totalprice - INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedSt);\r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalprice: 4,\r\n        error: false\r\n    })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) =>{\r\n    return updateObject(state, {error: true})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst purchaseInit = (state, action) =>{\r\n    return updateObject(state, {purchased: false})\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\r\n    return updateObject(state, {\r\n        orders: state.orders.concat(newOrder),\r\n        loading: false,\r\n        purchased: true\r\n    });\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {loading: false})\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true})\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,loading: false})\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false})\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n})\n\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App></App>\n        </BrowserRouter>\n    </Provider>\n\n)\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}